#!/usr/bin/env ruby

# ----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE" (Revision 42):
# <vivien@didelot.org> wrote this file. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return Vivien Didelot
# ----------------------------------------------------------------------------

require 'notes'
require 'optparse'
require 'paint'
require 'find'

def pretty_print(note)
  colors = {
    "TODO"  => 'green',
    "FIXME" => 'yellow',
    "XXX"   => 'red',
    :custom => 'cyan'
  }
  # grep style format
  col = Paint[':', :cyan]
  format = Paint['%s', :magenta] + col
  format << Paint['%s', :green] + col
  format << Paint['%s', colors[note.tag] || colors[:custom], :bold] + col
  format << "%s\n"
  printf(format,
         note.source,
         note.line,
         note.tag,
         note.text.rstrip)
end

tags = Notes::TAGS.dup

ARGV.options do |o|
  o.version = Notes::VERSION
  o.banner = 'Usage: notes [OPTIONS] [FILE]...'
  for tag in tags do
    o.on("--no-#{tag.downcase}", "Do not search #{tag} tags") { tags.delete(tag) }
  end
  o.on('-t', '--tag=TAG', 'Search TAG tags') { |tag| tags.push(tag).uniq! }
  o.on('--no-color', 'Do not colorize ouput') { Paint.mode = 0 }
end

begin
  ARGV.options.parse!

  scanner = Notes::Scanner.new
  scanner.look_for tags
  scanner.on_note do |note|
    pretty_print(note)
  end

  paths = ARGV.dup
  paths.empty? and paths << Dir.pwd

  Find.find(*paths) do |path|
    unless paths.include? path
      Find.prune if File.basename(path).start_with? '.'
    end
    next if File.directory? path

    scanner.scan_file(path)
  end

rescue => e
  STDERR.puts "Oops, #{e.message}"
end

exit
